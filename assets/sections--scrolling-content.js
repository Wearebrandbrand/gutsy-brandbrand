if(!customElements.get("scrolling-content")){class n extends HTMLElement{static get observedAttributes(){return["selected-index"]}constructor(){super()}connectedCallback(){if(this.images_container=Array.from(this.querySelectorAll(".scrolling-content--image")),this.first_image=this.querySelector(".scrolling-content--image.active"),this.sections=Array.from(this.querySelectorAll(".scrolling-content--content")),this.dots=this.first_image.querySelectorAll(".dot"),this.offset="-50% 0% -50% 0%",this.selectedIndex=this.selectedIndex,this.intersectionOptions={rootMargin:this.offset,threshold:0},this.sections.forEach((e,t)=>{new IntersectionObserver(this.handleIntersectionCallback.bind(this),this.intersectionOptions).observe(e)}),this.dots.length){let e=this.sections;this.dots.forEach((t,s)=>{t.addEventListener("click",function(i){let o=parseInt(getComputedStyle(document.documentElement).getPropertyValue("--header-height"),10),l=e[s].getBoundingClientRect().top+window.scrollY-o;window.scrollTo({top:l,left:0,behavior:"smooth"})})})}}handleIntersectionCallback(e){e.forEach((t,s)=>{let i=this.sections.indexOf(t.target);i!==this.selectedIndex&&(this.selectedIndex=i)})}get selectedIndex(){return parseInt(this.getAttribute("selected-index"))||0}set selectedIndex(e){this.setAttribute("selected-index",e)}attributeChangedCallback(e,t,s){e==="selected-index"&&t!==null&&t!==s&&this.dots.length&&([].forEach.call(this.dots,function(i){i.classList.remove("is-selected")}),this.dots[s].classList.add("is-selected"))}}customElements.define("scrolling-content",n)}
//# sourceMappingURL=sections--scrolling-content.js.map
