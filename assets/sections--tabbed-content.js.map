{"version":3,"file":"sections--tabbed-content.js","sources":["../theming/js/sections/tabbed-content.js"],"sourcesContent":["/**\n *  @class\n *  @function TabbedContent\n */\nif (!customElements.get('tabbed-content')) {\n  class TabbedContent extends HTMLElement {\n    static get observedAttributes() {\n      return ['selected-index'];\n    }\n\n    constructor() {\n      super();\n    }\n\n    connectedCallback() {\n      this.selectedIndex = this.selectedIndex;\n      this.animations_enabled = document.body.classList.contains('animations-true') && typeof gsap !== 'undefined';\n      this.scroller = this.querySelector('.tabbed-content--scroll');\n      this.buttons = Array.from(this.scroller.querySelectorAll('button'));\n      this.panels = Array.from(this.querySelectorAll('.tabbed-content--content'));\n      this.tl = false;\n      if (this.animations_enabled) {\n        this.tl = gsap.timeline({\n          paused: true\n        });\n      }\n\n      this.buttons.forEach((button, index) => {\n        button.addEventListener('click', () => {\n          this.selectedIndex = index;\n        });\n      });\n      if (Shopify.designMode) {\n        this.addEventListener('shopify:block:select', (event) => {\n          this.selectedIndex = this.buttons.indexOf(event.target);\n        });\n      }\n    }\n\n    get selectedIndex() {\n      return parseInt(this.getAttribute('selected-index')) || 0;\n    }\n\n    set selectedIndex(index) {\n      this.setAttribute('selected-index', index);\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      if (name === \"selected-index\" && oldValue !== null && oldValue !== newValue) {\n        this.buttons[oldValue].classList.remove('active');\n        this.buttons[newValue].classList.add('active');\n        if (this.animations_enabled && !this.tl.isActive()) {\n          this.transitionFromTo(this.panels[parseInt(oldValue)], this.panels[parseInt(newValue)]);\n        } else {\n          this.panels[parseInt(oldValue)].classList.remove('active');\n          this.panels[parseInt(newValue)].classList.add('active');\n        }\n\n      }\n    }\n\n    transitionFromTo(oldPanel, newPanel) {\n      this.tl\n      .clear()\n      .to(oldPanel, {autoAlpha: 0, duration: 0.25})\n      .set(oldPanel, {className: \"-=active\"})\n      .set(newPanel, {className: \"+=active\"})\n      .to(newPanel, {autoAlpha: 1, duration: 0.25});\n\n      this.tl.play();\n    }\n  }\n\n  customElements.define('tabbed-content', TabbedContent);\n}\n"],"names":["TabbedContent","button","index","event","name","oldValue","newValue","oldPanel","newPanel"],"mappings":"AAIA,GAAI,CAAC,eAAe,IAAI,gBAAgB,EAAG,CACzC,MAAMA,UAAsB,WAAY,CACtC,WAAW,oBAAqB,CAC9B,MAAO,CAAC,gBAAgB,CAC9B,CAEI,aAAc,CACZ,MAAO,CACb,CAEI,mBAAoB,CAClB,KAAK,cAAgB,KAAK,cAC1B,KAAK,mBAAqB,SAAS,KAAK,UAAU,SAAS,iBAAiB,GAAK,OAAO,KAAS,IACjG,KAAK,SAAW,KAAK,cAAc,yBAAyB,EAC5D,KAAK,QAAU,MAAM,KAAK,KAAK,SAAS,iBAAiB,QAAQ,CAAC,EAClE,KAAK,OAAS,MAAM,KAAK,KAAK,iBAAiB,0BAA0B,CAAC,EAC1E,KAAK,GAAK,GACN,KAAK,qBACP,KAAK,GAAK,KAAK,SAAS,CACtB,OAAQ,EAClB,CAAS,GAGH,KAAK,QAAQ,QAAQ,CAACC,EAAQC,IAAU,CACtCD,EAAO,iBAAiB,QAAS,IAAM,CACrC,KAAK,cAAgBC,CAC/B,CAAS,CACT,CAAO,EACG,QAAQ,YACV,KAAK,iBAAiB,uBAAyBC,GAAU,CACvD,KAAK,cAAgB,KAAK,QAAQ,QAAQA,EAAM,MAAM,CAChE,CAAS,CAET,CAEI,IAAI,eAAgB,CAClB,OAAO,SAAS,KAAK,aAAa,gBAAgB,CAAC,GAAK,CAC9D,CAEI,IAAI,cAAcD,EAAO,CACvB,KAAK,aAAa,iBAAkBA,CAAK,CAC/C,CAEI,yBAAyBE,EAAMC,EAAUC,EAAU,CAC7CF,IAAS,kBAAoBC,IAAa,MAAQA,IAAaC,IACjE,KAAK,QAAQD,CAAQ,EAAE,UAAU,OAAO,QAAQ,EAChD,KAAK,QAAQC,CAAQ,EAAE,UAAU,IAAI,QAAQ,EACzC,KAAK,oBAAsB,CAAC,KAAK,GAAG,SAAQ,EAC9C,KAAK,iBAAiB,KAAK,OAAO,SAASD,CAAQ,CAAC,EAAG,KAAK,OAAO,SAASC,CAAQ,CAAC,CAAC,GAEtF,KAAK,OAAO,SAASD,CAAQ,CAAC,EAAE,UAAU,OAAO,QAAQ,EACzD,KAAK,OAAO,SAASC,CAAQ,CAAC,EAAE,UAAU,IAAI,QAAQ,GAIhE,CAEI,iBAAiBC,EAAUC,EAAU,CACnC,KAAK,GACJ,MAAK,EACL,GAAGD,EAAU,CAAC,UAAW,EAAG,SAAU,GAAI,CAAC,EAC3C,IAAIA,EAAU,CAAC,UAAW,UAAU,CAAC,EACrC,IAAIC,EAAU,CAAC,UAAW,UAAU,CAAC,EACrC,GAAGA,EAAU,CAAC,UAAW,EAAG,SAAU,GAAI,CAAC,EAE5C,KAAK,GAAG,KAAM,CACpB,CACA,CAEE,eAAe,OAAO,iBAAkBR,CAAa,CACvD"}