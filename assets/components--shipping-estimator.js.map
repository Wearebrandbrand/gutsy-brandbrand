{"version":3,"file":"components--shipping-estimator.js","sources":["../theming/js/components/shipping-estimator.js"],"sourcesContent":["/**\n *  @class\n *  @function ShippingEstimator\n */\nif (!customElements.get('shipping-estimator')) {\n  class ShippingEstimator extends HTMLElement {\n    constructor() {\n      super();\n    }\n\n    connectedCallback() {\n      this.setupCountries();\n      this.submitButton = this.querySelector('[type=\"button\"]');\n      this.submitButton.addEventListener('click', this.estimateShipping.bind(this));\n      this.results = this.querySelector('.shipping-estimator--results');\n    }\n\n    async estimateShipping() {\n      const zip = this.querySelector('.shipping-estimator-zip').value,\n        country = this.querySelector('.shipping-estimator-country').value,\n        province = this.querySelector('.shipping-estimator-province').value;\n\n      this.submitButton.classList.add('loading');\n      const response = await fetch(\n        `${window.theme.routes.cart_url}/prepare_shipping_rates.json?shipping_address[zip]=${zip}&shipping_address[country]=${country}&shipping_address[province]=${province}`,\n        {\n          method: 'POST'\n        }\n      );\n      if (response.ok) {\n        const shippingRates = await this.getShippingRates(zip, country, province);\n        this.formatShippingRates(shippingRates);\n      } else {\n        const jsonError = await response.json();\n        this.formatError(jsonError);\n      }\n      this.submitButton.classList.remove('loading');\n    }\n\n    async getShippingRates(zip, country, province) {\n      const response = await fetch(\n        `${window.theme.routes.cart_url}/async_shipping_rates.json?shipping_address[zip]=${zip}&shipping_address[country]=${country}&shipping_address[province]=${province}`\n      );\n      const responseText = await response.text();\n      if (responseText === 'null') {\n        return this.getShippingRates(zip, country, province);\n      } else {\n        return JSON.parse(responseText).shipping_rates;\n      }\n    }\n\n    formatShippingRates(shippingRates) {\n      let formattedShippingRates = '',\n        answer = '',\n        format = window.theme.settings.money_with_currency_format || \"${{amount}}\";\n      shippingRates.forEach((shippingRate) => {\n        formattedShippingRates += `<li>${shippingRate.presentment_name}: ${formatMoney(parseFloat(shippingRate.price) * 100, format)}</li>`;\n      });\n      if (shippingRates.length === 0) {\n        answer = window.theme.strings.shippingEstimatorNoResults;\n      } else if (shippingRates.length === 1) {\n        answer = window.theme.strings.shippingEstimatorOneResult;\n      } else {\n        answer = window.theme.strings.shippingEstimatorMultipleResults;\n      }\n      const html = `\n        <p>${answer}</p>\n        ${formattedShippingRates === \"\" ? \"\" : `<ul>${formattedShippingRates}</ul>`}\n      `;\n      this.results.innerHTML = '';\n      this.results.insertAdjacentHTML('beforeend', html);\n    }\n\n    formatError(errors) {\n      let formattedShippingRates = '';\n      Object.keys(errors).forEach((errorKey) => {\n        formattedShippingRates += `<li>${errorKey} ${errors[errorKey]}</li>`;\n      });\n      const html = `\n        <p>${window.theme.strings.shippingEstimatorError}</p>\n        <ul>${formattedShippingRates}</ul>\n      `;\n      this.results.innerHTML = '';\n      this.results.insertAdjacentHTML('beforeend', html);\n    }\n\n    setupCountries() {\n\n      if (Shopify && Shopify.CountryProvinceSelector) {\n        let formId = this.dataset.formId;\n        new Shopify.CountryProvinceSelector(`shipping-estimator-country-${formId}`, `shipping-estimator-province-${formId}`, {\n          hideElement: `shipping-estimator-province-wrapper-${formId}`\n        });\n      }\n    }\n  }\n\n  customElements.define('shipping-estimator', ShippingEstimator);\n}\n"],"names":["ShippingEstimator","zip","country","province","response","shippingRates","jsonError","responseText","formattedShippingRates","answer","format","shippingRate","html","errors","errorKey","formId"],"mappings":"AAIA,GAAI,CAAC,eAAe,IAAI,oBAAoB,EAAG,CAC7C,MAAMA,UAA0B,WAAY,CAC1C,aAAc,CACZ,MAAO,CACb,CAEI,mBAAoB,CAClB,KAAK,eAAgB,EACrB,KAAK,aAAe,KAAK,cAAc,iBAAiB,EACxD,KAAK,aAAa,iBAAiB,QAAS,KAAK,iBAAiB,KAAK,IAAI,CAAC,EAC5E,KAAK,QAAU,KAAK,cAAc,8BAA8B,CACtE,CAEI,MAAM,kBAAmB,CACvB,MAAMC,EAAM,KAAK,cAAc,yBAAyB,EAAE,MACxDC,EAAU,KAAK,cAAc,6BAA6B,EAAE,MAC5DC,EAAW,KAAK,cAAc,8BAA8B,EAAE,MAEhE,KAAK,aAAa,UAAU,IAAI,SAAS,EACzC,MAAMC,EAAW,MAAM,MACrB,GAAG,OAAO,MAAM,OAAO,QAAQ,sDAAsDH,CAAG,8BAA8BC,CAAO,+BAA+BC,CAAQ,GACpK,CACE,OAAQ,MAClB,CACO,EACD,GAAIC,EAAS,GAAI,CACf,MAAMC,EAAgB,MAAM,KAAK,iBAAiBJ,EAAKC,EAASC,CAAQ,EACxE,KAAK,oBAAoBE,CAAa,CAC9C,KAAa,CACL,MAAMC,EAAY,MAAMF,EAAS,KAAM,EACvC,KAAK,YAAYE,CAAS,CAClC,CACM,KAAK,aAAa,UAAU,OAAO,SAAS,CAClD,CAEI,MAAM,iBAAiBL,EAAKC,EAASC,EAAU,CAI7C,MAAMI,EAAe,MAHJ,MAAM,MACrB,GAAG,OAAO,MAAM,OAAO,QAAQ,oDAAoDN,CAAG,8BAA8BC,CAAO,+BAA+BC,CAAQ,EACnK,GACmC,KAAM,EAC1C,OAAII,IAAiB,OACZ,KAAK,iBAAiBN,EAAKC,EAASC,CAAQ,EAE5C,KAAK,MAAMI,CAAY,EAAE,cAExC,CAEI,oBAAoBF,EAAe,CACjC,IAAIG,EAAyB,GAC3BC,EAAS,GACTC,EAAS,OAAO,MAAM,SAAS,4BAA8B,cAC/DL,EAAc,QAASM,GAAiB,CACtCH,GAA0B,OAAOG,EAAa,gBAAgB,KAAK,YAAY,WAAWA,EAAa,KAAK,EAAI,IAAKD,CAAM,CAAC,OACpI,CAAO,EACGL,EAAc,SAAW,EAC3BI,EAAS,OAAO,MAAM,QAAQ,2BACrBJ,EAAc,SAAW,EAClCI,EAAS,OAAO,MAAM,QAAQ,2BAE9BA,EAAS,OAAO,MAAM,QAAQ,iCAEhC,MAAMG,EAAO;AAAA,aACNH,CAAM;AAAA,UACTD,IAA2B,GAAK,GAAK,OAAOA,CAAsB,OAAO;AAAA,QAE7E,KAAK,QAAQ,UAAY,GACzB,KAAK,QAAQ,mBAAmB,YAAaI,CAAI,CACvD,CAEI,YAAYC,EAAQ,CAClB,IAAIL,EAAyB,GAC7B,OAAO,KAAKK,CAAM,EAAE,QAASC,GAAa,CACxCN,GAA0B,OAAOM,CAAQ,IAAID,EAAOC,CAAQ,CAAC,OACrE,CAAO,EACD,MAAMF,EAAO;AAAA,aACN,OAAO,MAAM,QAAQ,sBAAsB;AAAA,cAC1CJ,CAAsB;AAAA,QAE9B,KAAK,QAAQ,UAAY,GACzB,KAAK,QAAQ,mBAAmB,YAAaI,CAAI,CACvD,CAEI,gBAAiB,CAEf,GAAI,SAAW,QAAQ,wBAAyB,CAC9C,IAAIG,EAAS,KAAK,QAAQ,OAC1B,IAAI,QAAQ,wBAAwB,8BAA8BA,CAAM,GAAI,+BAA+BA,CAAM,GAAI,CACnH,YAAa,uCAAuCA,CAAM,EACpE,CAAS,CACT,CACA,CACA,CAEE,eAAe,OAAO,qBAAsBf,CAAiB,CAC/D"}