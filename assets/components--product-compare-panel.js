if(!customElements.get("product-compare-panel")){class a extends HTMLElement{constructor(){super(),this.toggle=this.querySelector(".compare-toggle"),this.drawer=this.querySelector(".compare-drawer"),this.clear=this.querySelector(".compare-clear"),this.start=this.querySelector(".compare-start"),this.modal=this.querySelector(".product-compare-modal"),this.table=this.querySelector("product-compare-table"),this.max=Number(this.dataset.max),this.href=""}connectedCallback(){setTimeout(()=>this.toggle.classList.add("compare-toggle--active"),250),this.addEventListeners(),this.updateCompareCheckboxes(),this.updateCompareCounters(),this.updateStartButton()}addEventListeners(){this.toggle.addEventListener("click",this.onButtonClick.bind(this)),this.drawer.addEventListener("click",this.onRemoveClick.bind(this)),this.clear.addEventListener("click",this.onClearClick.bind(this)),this.start.addEventListener("click",this.onStartClick.bind(this)),document.addEventListener("change",this.onCheckboxClick.bind(this))}getSelectedProducts(){return JSON.parse(localStorage.getItem("compare-products-brandbrand"))||[]}addToCompare(e,t,r){const o=this.getSelectedProducts();o.some(s=>s.id===e)||(o.push({id:e,url:t,handle:r}),localStorage.setItem("compare-products-brandbrand",JSON.stringify(o)),this.updateCompareComponents())}removeFromCompare(e){const t=this.getSelectedProducts().filter(r=>r.id!==e);localStorage.setItem("compare-products-brandbrand",JSON.stringify(t)),this.updateCompareComponents()}updateStartButton(){this.start.disabled=!this.getCompareCount()}onCheckboxClick(e){if(e.target.classList.contains("product-card-compare--checkbox")){const{productId:t,productUrl:r,productHandle:o}=e.target.dataset;e.target.checked?this.getCompareCount()<this.max&&this.addToCompare(t,r,o):this.removeFromCompare(t)}}updateCompareCheckboxes(){const e=this.getSelectedProducts(),t=this.getCompareCount();document.querySelectorAll(".product-card-compare--checkbox").forEach(r=>{const o=e.some(s=>s.id===r.dataset.productId);r.checked=o,r.disabled=!o&&t>=this.max})}onRemoveClick(e){if(e.target.classList.contains("compare-remove")){const t=e.target.dataset.productId;this.removeFromCompare(t),e.target.closest("product-card-small").remove()}}onClearClick(){this.getSelectedProducts().forEach(t=>this.removeFromCompare(t.id)),this.drawer.querySelector(".compare-drawer--list").innerHTML='<div class="compare-drawer--list-item"></div>'.repeat(this.max),this.closeDrawer()}onStartClick(){this.modal.show(),this.table.dispatchEvent(new CustomEvent("render-product-compare-modal",{bubbles:!0}))}openDrawer(){this.drawer.removeAttribute("inert"),this.drawer.focus(),this.drawer.classList.add("active"),document.body.classList.add("open-cc")}closeDrawer(){this.drawer.setAttribute("inert",""),this.drawer.blur(),this.drawer.classList.remove("active"),document.body.classList.remove("open-cc")}onButtonClick(){this.renderProducts(),this.openDrawer()}getCompareCount(){return this.getSelectedProducts().length}updateCompareCounters(){const e=this.getCompareCount();document.querySelectorAll(".compare-counter").forEach(t=>{t.textContent=e})}async renderProducts(){const e=this.getSelectedProducts(),r=(await Promise.all(e.map(async o=>{const c=await(await fetch(`${o.url}?sections=product-compare-card`)).json();return this.getSectionInnerHTML(c["product-compare-card"],".shopify-section")}))).join("")+'<div class="compare-drawer--list-item"></div>'.repeat(this.max-e.length);this.drawer.querySelector(".compare-drawer--list").innerHTML=r}getSectionInnerHTML(e,t){return new DOMParser().parseFromString(e,"text/html").querySelector(t).innerHTML}updateCompareComponents(){this.updateCompareCheckboxes(),this.updateCompareCounters(),this.updateStartButton()}}customElements.define("product-compare-panel",a)}
//# sourceMappingURL=components--product-compare-panel.js.map
