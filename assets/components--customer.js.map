{"version":3,"file":"components--customer.js","sources":["../theming/js/components/customer.js"],"sourcesContent":["/**\n *  @class\n *  @function  CustomerAddresses\n */\n\nclass CustomerAddresses {\n\n  constructor() {\n    this.add_new = document.querySelector('.add-address');\n    this.edit_addresses = document.querySelectorAll('.edit-address-button');\n    this.delete_addresses = document.querySelectorAll('.delete-address-button');\n    // Add functionality to buttons\n    this.add_new.addEventListener('click', (e) => this.toggle_addnew(e));\n    this.edit_addresses.forEach((edit_address) => {\n      this.edit_address(edit_address);\n    });\n    this.delete_addresses.forEach((delete_address) => {\n      this.delete_address(delete_address);\n    });\n    this.setupCountries();\n  }\n\n  toggle_addnew(e) {\n    e.preventDefault();\n    let add_new_sidepanel = document.querySelector('#Side-Panel-Add-Address');\n\n    document.getElementsByTagName(\"body\")[0].classList.add('open-cc');\n\n    add_new_sidepanel.classList.add('active');\n  }\n\n  edit_address(edit_address) {\n    let _this = this,\n      button = edit_address,\n      target = button.closest('.my-address').querySelector('#' + button.dataset.controls);\n\n    button.addEventListener('click', (e) => {\n      e.preventDefault();\n      document.getElementsByTagName(\"body\")[0].classList.add('open-cc');\n      target.classList.add('active');\n    });\n  }\n\n  delete_address(delete_address) {\n    delete_address.addEventListener('click', (e) => {\n      // eslint-disable-next-line no-alert\n      if (confirm(e.target.getAttribute('data-confirm-message'))) {\n        Shopify.postLink(e.target.getAttribute('data-target'), {\n          parameters: {\n            _method: 'delete'\n          },\n        });\n      }\n    });\n  }\n\n  setupCountries() {\n    if (Shopify && Shopify.CountryProvinceSelector) {\n\n      document.querySelectorAll('[data-address-country-select]').forEach((select) => {\n        const formId = select.dataset.formId;\n        // eslint-disable-next-line no-new\n        new Shopify.CountryProvinceSelector(`AddressCountry_${formId}`, `AddressProvince_${formId}`, {\n          hideElement: `AddressProvinceContainer_${formId}`\n        });\n      });\n\n      // eslint-disable-next-line no-new\n      new Shopify.CountryProvinceSelector('AddressCountryNew', 'AddressProvinceNew', {\n        hideElement: 'AddressProvinceContainerNew'\n      });\n    }\n  }\n}\n\nwindow.addEventListener('load', () => {\n  if (typeof CustomerAddresses !== 'undefined') {\n    new CustomerAddresses();\n  }\n});"],"names":["CustomerAddresses","edit_address","delete_address","add_new_sidepanel","button","target","e","select","formId"],"mappings":"AAKA,MAAMA,CAAkB,CAEtB,aAAc,CACZ,KAAK,QAAU,SAAS,cAAc,cAAc,EACpD,KAAK,eAAiB,SAAS,iBAAiB,sBAAsB,EACtE,KAAK,iBAAmB,SAAS,iBAAiB,wBAAwB,EAE1E,KAAK,QAAQ,iBAAiB,QAAU,GAAM,KAAK,cAAc,CAAC,CAAC,EACnE,KAAK,eAAe,QAASC,GAAiB,CAC5C,KAAK,aAAaA,CAAY,CACpC,CAAK,EACD,KAAK,iBAAiB,QAASC,GAAmB,CAChD,KAAK,eAAeA,CAAc,CACxC,CAAK,EACD,KAAK,eAAgB,CACzB,CAEE,cAAc,EAAG,CACf,EAAE,eAAgB,EAClB,IAAIC,EAAoB,SAAS,cAAc,yBAAyB,EAExE,SAAS,qBAAqB,MAAM,EAAE,CAAC,EAAE,UAAU,IAAI,SAAS,EAEhEA,EAAkB,UAAU,IAAI,QAAQ,CAC5C,CAEE,aAAaF,EAAc,CACtB,IACDG,EAASH,EACTI,EAASD,EAAO,QAAQ,aAAa,EAAE,cAAc,IAAMA,EAAO,QAAQ,QAAQ,EAEpFA,EAAO,iBAAiB,QAAUE,GAAM,CACtCA,EAAE,eAAgB,EAClB,SAAS,qBAAqB,MAAM,EAAE,CAAC,EAAE,UAAU,IAAI,SAAS,EAChED,EAAO,UAAU,IAAI,QAAQ,CACnC,CAAK,CACL,CAEE,eAAeH,EAAgB,CAC7BA,EAAe,iBAAiB,QAAUI,GAAM,CAE1C,QAAQA,EAAE,OAAO,aAAa,sBAAsB,CAAC,GACvD,QAAQ,SAASA,EAAE,OAAO,aAAa,aAAa,EAAG,CACrD,WAAY,CACV,QAAS,QACV,CACX,CAAS,CAET,CAAK,CACL,CAEE,gBAAiB,CACX,SAAW,QAAQ,0BAErB,SAAS,iBAAiB,+BAA+B,EAAE,QAASC,GAAW,CAC7E,MAAMC,EAASD,EAAO,QAAQ,OAE9B,IAAI,QAAQ,wBAAwB,kBAAkBC,CAAM,GAAI,mBAAmBA,CAAM,GAAI,CAC3F,YAAa,4BAA4BA,CAAM,EACzD,CAAS,CACT,CAAO,EAGD,IAAI,QAAQ,wBAAwB,oBAAqB,qBAAsB,CAC7E,YAAa,6BACrB,CAAO,EAEP,CACA,CAEA,OAAO,iBAAiB,OAAQ,IAAM,CAChC,OAAOR,EAAsB,KAC/B,IAAIA,CAER,CAAC"}