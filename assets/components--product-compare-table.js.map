{"version":3,"file":"components--product-compare-table.js","sources":["../theming/js/components/product-compare-table.js"],"sourcesContent":["/**\n *  @class\n *  @function ProductCompareTable\n */\nif (!customElements.get('product-compare-table')) {\n  class ProductCompareTable extends HTMLElement {\n    constructor() {\n      super();\n    }\n\n    connectedCallback() {\n      this.container = this.querySelector('.compare-lightbox--data');\n      this.addEventListeners();\n    }\n\n    addEventListeners() {\n      this.addEventListener('render-product-compare-modal', this.renderTable.bind(this));\n    }\n\n    renderTable() {\n      this.classList.add('loading');\n      this.handles = this.getCompareHandles();\n      this.fetchProducts();\n    }\n\n    getSelectedProducts() {\n      return JSON.parse(window.localStorage.getItem('compare-products-brandbrand')) || [];\n    }\n\n    getCompareHandles() {\n      const {\n        searchParams\n      } = new URL(window.location);\n      const handles = searchParams.get('compare');\n\n      if (typeof handles === 'string' && handles !== '') {\n        return handles.split(',');\n      }\n\n      return [];\n    }\n\n    async fetchProducts() {\n      let compareProducts = this.getSelectedProducts(),\n        returnHtml = '',\n        returnArray = [];\n\n      await Promise.all(compareProducts.map(async (product) => {\n        await fetch(`${product.url}?view=compare`, {\n          method: 'GET'\n        }).then((response) => {\n          return response.text();\n        }).then((response) => {\n          returnArray[product.id] = this.getSectionInnerHTML(response, '.compare-lightbox--data');\n        });\n      })).finally(() => {\n        this.classList.remove('loading');\n      });\n      compareProducts.forEach((product, i) => {\n        returnHtml += returnArray[product.id];\n      });\n      this.container.style.setProperty('--columns', compareProducts.length);\n      this.container.innerHTML = returnHtml;\n\n      this.equalHeights();\n    }\n\n    getSectionInnerHTML(html, selector) {\n      return new DOMParser()\n      .parseFromString(html, 'text/html')\n      .querySelector(selector).innerHTML;\n    }\n\n    equalHeights() {\n      for (let i = 0; i < 10; i++) {\n        this.equalizeTableRowHeightAcrossTables(i);\n      }\n    }\n\n    equalizeTableRowHeightAcrossTables(rowPosition) {\n      const tables = this.container.querySelectorAll('.compare-lightbox--table');\n\n      // Initialize an array to hold the heights of rows at the specified position\n      const heights = [];\n\n      // Iterate over each table\n      tables.forEach(table => {\n        const rows = table.querySelectorAll('.compare-lightbox--row');\n\n        // Ensure the row at the specified position exists\n        if (rows.length > rowPosition) {\n          const rowHeight = rows[rowPosition].clientHeight;\n\n          // If this is the first table, store the row height\n          if (heights.length === 0) {\n            heights[rowPosition] = rowHeight;\n          } else {\n            // If there is already a row height stored for this position,\n            // check if the current row height is greater, and update if necessary\n            if (rowHeight > heights[rowPosition]) {\n              heights[rowPosition] = rowHeight;\n            }\n          }\n        }\n      });\n      // Set the height of rows at the specified position in all tables to the maximum height found\n      tables.forEach(table => {\n        const rows = table.querySelectorAll('.compare-lightbox--row');\n        if (rows.length > rowPosition) {\n          rows[rowPosition].style.height = heights[rowPosition] + 'px';\n        }\n      });\n    }\n  }\n\n  customElements.define('product-compare-table', ProductCompareTable);\n}"],"names":["ProductCompareTable","searchParams","handles","compareProducts","returnHtml","returnArray","product","response","i","html","selector","rowPosition","tables","heights","table","rows","rowHeight"],"mappings":"AAIA,GAAI,CAAC,eAAe,IAAI,uBAAuB,EAAG,CAChD,MAAMA,UAA4B,WAAY,CAC5C,aAAc,CACZ,MAAO,CACb,CAEI,mBAAoB,CAClB,KAAK,UAAY,KAAK,cAAc,yBAAyB,EAC7D,KAAK,kBAAmB,CAC9B,CAEI,mBAAoB,CAClB,KAAK,iBAAiB,+BAAgC,KAAK,YAAY,KAAK,IAAI,CAAC,CACvF,CAEI,aAAc,CACZ,KAAK,UAAU,IAAI,SAAS,EAC5B,KAAK,QAAU,KAAK,kBAAmB,EACvC,KAAK,cAAe,CAC1B,CAEI,qBAAsB,CACpB,OAAO,KAAK,MAAM,OAAO,aAAa,QAAQ,6BAA6B,CAAC,GAAK,CAAE,CACzF,CAEI,mBAAoB,CAClB,KAAM,CACJ,aAAAC,CACR,EAAU,IAAI,IAAI,OAAO,QAAQ,EACrBC,EAAUD,EAAa,IAAI,SAAS,EAE1C,OAAI,OAAOC,GAAY,UAAYA,IAAY,GACtCA,EAAQ,MAAM,GAAG,EAGnB,CAAE,CACf,CAEI,MAAM,eAAgB,CACpB,IAAIC,EAAkB,KAAK,oBAAqB,EAC9CC,EAAa,GACbC,EAAc,CAAE,EAElB,MAAM,QAAQ,IAAIF,EAAgB,IAAI,MAAOG,GAAY,CACvD,MAAM,MAAM,GAAGA,EAAQ,GAAG,gBAAiB,CACzC,OAAQ,KAClB,CAAS,EAAE,KAAMC,GACAA,EAAS,KAAM,CACvB,EAAE,KAAMA,GAAa,CACpBF,EAAYC,EAAQ,EAAE,EAAI,KAAK,oBAAoBC,EAAU,yBAAyB,CAChG,CAAS,CACT,CAAO,CAAC,EAAE,QAAQ,IAAM,CAChB,KAAK,UAAU,OAAO,SAAS,CACvC,CAAO,EACDJ,EAAgB,QAAQ,CAACG,EAASE,IAAM,CACtCJ,GAAcC,EAAYC,EAAQ,EAAE,CAC5C,CAAO,EACD,KAAK,UAAU,MAAM,YAAY,YAAaH,EAAgB,MAAM,EACpE,KAAK,UAAU,UAAYC,EAE3B,KAAK,aAAc,CACzB,CAEI,oBAAoBK,EAAMC,EAAU,CAClC,OAAO,IAAI,UAAS,EACnB,gBAAgBD,EAAM,WAAW,EACjC,cAAcC,CAAQ,EAAE,SAC/B,CAEI,cAAe,CACb,QAASF,EAAI,EAAGA,EAAI,GAAIA,IACtB,KAAK,mCAAmCA,CAAC,CAEjD,CAEI,mCAAmCG,EAAa,CAC9C,MAAMC,EAAS,KAAK,UAAU,iBAAiB,0BAA0B,EAGnEC,EAAU,CAAE,EAGlBD,EAAO,QAAQE,GAAS,CACtB,MAAMC,EAAOD,EAAM,iBAAiB,wBAAwB,EAG5D,GAAIC,EAAK,OAASJ,EAAa,CAC7B,MAAMK,EAAYD,EAAKJ,CAAW,EAAE,cAGhCE,EAAQ,SAAW,GAKjBG,EAAYH,EAAQF,CAAW,KACjCE,EAAQF,CAAW,EAAIK,EAGrC,CACA,CAAO,EAEDJ,EAAO,QAAQE,GAAS,CACtB,MAAMC,EAAOD,EAAM,iBAAiB,wBAAwB,EACxDC,EAAK,OAASJ,IAChBI,EAAKJ,CAAW,EAAE,MAAM,OAASE,EAAQF,CAAW,EAAI,KAElE,CAAO,CACP,CACA,CAEE,eAAe,OAAO,wBAAyBX,CAAmB,CACpE"}